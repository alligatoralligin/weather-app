{"version":3,"sources":["img/background-images/mountainImg.jpg","img/svg/falling-stars.svg","img/background-images/TokyoBG.jpg","img/background-images/LABG.jpg","img/background-images/IstanbulBG.jpg","img/background-images/HoustonBG.jpg","img/background-images/HanoiBG.jpg","img/svg/beanie.svg","img/svg/dust-wind.svg","img/svg/rainbow-clear.svg","img/svg/umbrella-wind.svg","img/svg/haze.svg","img/background-images/JakartaBG.jpg","img/background-images/TorontoBG.jpg","img/background-images/ParisBG.jpg","img/background-images/BusanBG.jpg","renderImgLogic.js","singleWeatherWeek.js","weatherWeek.js","mainWeather.js","weatherRender.js","navbar.js","homePage.js","loadingPage.js","bgImgImport.js","App.js","reportWebVitals.js","index.js","img/svg/clear-day.svg","img/svg/overcast.svg","img/svg/drizzle.svg","img/svg/rain.svg","img/svg/extreme-day-sleet.svg","img/svg/extreme-day-snow.svg","img/svg/extreme-hail.svg","img/svg/fog.svg","img/svg/snow.svg","img/svg/thunderstorms.svg","img/svg/thunderstorms-extreme-snow.svg"],"names":["module","exports","__webpack_require__","p","renderWeatherImg","imgSrc","imgAlt","isBetween","number","min","max","renderImg","propsweatherCode","React","createElement","src","clearDay","alt","overcast","fog","drizzle","rain","extremeSleet","snow","extremeHail","extremeSnow","thunderstorms","thunderstormsSnowEx","SingleweatherWeek","props","weatherCode","card","Fragment","CardContent","component","Typography","variant","time","maxTemp","minTemp","CardActions","Box","sx","maxWidth","height","m","Card","borderRadius","border","backgroundColor","renderList","WeatherWeek","ArrayLength","weekData","max_temp","length","days","cityName","getDayOfWeek","dateString","d","Date","getDay","name","i","push","Grid","item","width","dayofWeek","min_temp","weather_code","console","log","container","display","flex-wrap","MainWeatherComponent","current_weathercode","objectFit","alignSelf","overflow","boxShadow","style","maxHeight","gutterBottom","current_weather","Math","round","last_updated","current_winddirection","WeatherDisplay","renderMainWeather","renderWeatherWeek","cityData","currentCity","className","backgroundImage","concat","cityImg","backgroundSize","cities","ResponsiveAppBar","_React$useState","_React$useState2","_slicedToArray","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","handleCloseNavMenu","AppBar","position","Container","Toolbar","disableGutters","noWrap","Link","to","mr","xs","md","fontFamily","fontWeight","letterSpacing","color","textDecoration","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","MenuIcon","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","city","MenuItem","key","textAlign","href","Button","my","HomePage","mountainImg","justifyContent","randomIcon","randomIcons","fallingStars","beanie","dustWind","rainbowClear","umbrellaWind","haze","floor","random","LoadingPage","LinearProgress","backgroundImages","TokyoBG","JakartaBG","LABG","TorontoBG","IstanbulBG","ParisBG","HoustonBG","BusanBG","HanoiBG","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","isoDate","toISOString","split","myDate","setDate","getDate","parseInt","newIsoDate","App","renderRoutes","loadingScreen","fullweatherData","fullData","_useState","useState","_useState2","geoCode","setgeoCode","_useState3","_useState4","geoCodeLoaded","setgeoCodeLoaded","_useState5","_useState6","weekWeather","setweekWeather","_useState7","_useState8","isLoading","setIsLoading","useEffect","getGeocode","_x","_getGeocode","apply","arguments","_asyncToGenerator","_callee2","geocodeObject","_context2","axios","get","data","results","lat","latitude","long","longitude","_objectSpread","_ref","_callee","_context","getGeoCode","getWeeklyWeather","_x2","_x3","_x4","_getWeeklyWeather","_callee4","weekObject","_context4","daily","temperature_2m_max","temperature_2m_min","weathercode","temperature","winddirection","current_windspeed","windspeed","_ref2","_callee3","_context3","_toConsumableArray","WeeklyWeatherLoop","Route","path","element","Routes","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter"],"mappings":"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","file":"static/js/main.5d562bd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountainImg.9f7c5ea8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/falling-stars.21d0804f.svg\";","module.exports = __webpack_public_path__ + \"static/media/TokyoBG.afcf2b60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LABG.dfd8466d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IstanbulBG.87473e82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HoustonBG.fcc28b90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HanoiBG.42bcf034.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beanie.25a43b9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/dust-wind.87452751.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainbow-clear.b13b8476.svg\";","module.exports = __webpack_public_path__ + \"static/media/umbrella-wind.6a94286b.svg\";","module.exports = __webpack_public_path__ + \"static/media/haze.26b3a2ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/JakartaBG.d9837629.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TorontoBG.b95f6908.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ParisBG.a220930b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BusanBG.27e7cc29.jpg\";","import React from \"react\";\r\nimport clearDay from \"./img/svg/clear-day.svg\";\r\nimport overcast from \"./img/svg/overcast.svg\";\r\nimport drizzle from \"./img/svg/drizzle.svg\";\r\nimport rain from \"./img/svg/rain.svg\";\r\nimport extremeSleet from \"./img/svg/extreme-day-sleet.svg\";\r\nimport extremeSnow from \"./img/svg/extreme-day-snow.svg\";\r\nimport extremeHail from \"./img/svg/extreme-hail.svg\";\r\nimport fog from \"./img/svg/fog.svg\";\r\nimport snow from \"./img/svg/snow.svg\";\r\nimport thunderstorms from \"./img/svg/thunderstorms.svg\";\r\nimport thunderstormsSnowEx from \"./img/svg/thunderstorms-extreme-snow.svg\";\r\n\r\nfunction isBetween(number, min, max) {\r\n  return number >= min && number <= max;\r\n}\r\nexport let renderWeatherImg;\r\nexport let imgSrc;\r\nexport let imgAlt;\r\nexport function renderImg(propsweatherCode) {\r\n  if (isBetween(propsweatherCode, 0, 0) === true) {\r\n    renderWeatherImg = <img src={clearDay} alt=\"Clear sky\"></img>;\r\n    imgSrc = clearDay;\r\n    imgAlt = \"Clear sky\";\r\n  }\r\n  if (isBetween(propsweatherCode, 1, 3) === true) {\r\n    renderWeatherImg = (\r\n      <img src={overcast} alt=\"Mainly clear, partly cloudy, and overcast\"></img>\r\n    );\r\n    imgSrc = overcast;\r\n    imgAlt = \"Mainly clear, partly cloudy, and overcast\";\r\n  }\r\n  if (isBetween(propsweatherCode, 45, 48) === true) {\r\n    renderWeatherImg = <img src={fog} alt=\"Fog and depositing rime fog\"></img>;\r\n    imgSrc = fog;\r\n    imgAlt = \"Fog and depositing rime fog\";\r\n  }\r\n\r\n  if (isBetween(propsweatherCode, 51, 55) === true) {\r\n    renderWeatherImg = (\r\n      <img\r\n        src={drizzle}\r\n        alt=\"Drizzle: Light, moderate, and dense intensity\"\r\n      ></img>\r\n    );\r\n    imgSrc = drizzle;\r\n    imgAlt = \"Drizzle: Light, moderate, and dense intensity\";\r\n  }\r\n  if (isBetween(propsweatherCode, 56, 57) === true) {\r\n    renderWeatherImg = (\r\n      <img\r\n        src={clearDay}\r\n        alt=\"Freezing Drizzle: Light and dense intensity\"\r\n      ></img>\r\n    );\r\n    imgSrc = clearDay;\r\n    imgAlt = \"Freezing Drizzle: Light and dense intensity\";\r\n  }\r\n  if (isBetween(propsweatherCode, 61, 65) === true) {\r\n    renderWeatherImg = (\r\n      <img src={rain} alt=\"Rain: Slight, moderate and heavy intensity\"></img>\r\n    );\r\n    imgSrc = rain;\r\n    imgAlt = \"Rain: Slight, moderate and heavy intensity\";\r\n  }\r\n  if (isBetween(propsweatherCode, 66, 67) === true) {\r\n    renderWeatherImg = (\r\n      <img\r\n        src={extremeSleet}\r\n        alt=\"Freezing Rain: Light and heavy intensity\"\r\n      ></img>\r\n    );\r\n    imgSrc = extremeSleet;\r\n    imgAlt = \"Freezing Rain: Light and heavy intensity\";\r\n  }\r\n  if (isBetween(propsweatherCode, 71, 75) === true) {\r\n    renderWeatherImg = (\r\n      <img\r\n        src={snow}\r\n        alt=\"Snow fall: Slight, moderate, and heavy intensity\"\r\n      ></img>\r\n    );\r\n    imgSrc = snow;\r\n    imgAlt = \"Snow fall: Slight, moderate, and heavy intensity\";\r\n  }\r\n  if (isBetween(propsweatherCode, 80, 82) === true) {\r\n    renderWeatherImg = <img src={extremeHail} alt=\"Snow Grains\"></img>;\r\n    imgSrc = extremeHail;\r\n    imgAlt = \"Snow Grains\";\r\n  }\r\n  if (isBetween(propsweatherCode, 77, 77) === true) {\r\n    renderWeatherImg = (\r\n      <img\r\n        src={clearDay}\r\n        alt=\"Rain showers: Slight, moderate, and violent\"\r\n      ></img>\r\n    );\r\n    imgSrc = clearDay;\r\n    imgAlt = \"Rain showers: Slight, moderate, and violent\";\r\n  }\r\n  if (isBetween(propsweatherCode, 85, 86) === true) {\r\n    renderWeatherImg = (\r\n      <img src={extremeSnow} alt=\"Snow showers slight and heavy\"></img>\r\n    );\r\n    imgSrc = extremeSnow;\r\n    imgAlt = \"Snow showers slight and heavy\";\r\n  }\r\n  if (isBetween(propsweatherCode, 95, 95) === true) {\r\n    renderWeatherImg = (\r\n      <img src={thunderstorms} alt=\"Thunderstorm: Slight or moderate\"></img>\r\n    );\r\n    imgSrc = thunderstorms;\r\n    imgAlt = \"Thunderstorm: Slight or moderate\";\r\n  }\r\n  if (isBetween(propsweatherCode, 96, 99) === true) {\r\n    renderWeatherImg = (\r\n      <img\r\n        src={thunderstormsSnowEx}\r\n        alt=\"Thunderstorm with slight and heavy hail\"\r\n      ></img>\r\n    );\r\n    imgSrc = thunderstormsSnowEx;\r\n    imgAlt = \"Thunderstorm with slight and heavy hail\";\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { alpha } from \"@mui/material\";\r\nimport { renderImg, renderWeatherImg } from \"./renderImgLogic\";\r\n\r\nfunction SingleweatherWeek(props) {\r\n  renderImg(props.weatherCode);\r\n  //   returns renderWeatherImg content based on props.weatherCode value\r\n\r\n  const card = (\r\n    <React.Fragment>\r\n      <CardContent component={\"span\"}>\r\n        {renderWeatherImg}\r\n        <Typography component={\"span\"} variant=\"body2\">\r\n          Time:{props.time}\r\n          <br></br>\r\n          Max°C:{props.maxTemp}\r\n          <br></br>\r\n          Min°C:{props.minTemp}\r\n          <br />\r\n          WMO:{props.weatherCode}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions></CardActions>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 275, height: 270, m: 0.4 }}>\r\n      <Card\r\n        variant=\"outlined\"\r\n        sx={{\r\n          height: \"100%\",\r\n          borderRadius: 2.3,\r\n          border: 2,\r\n          backgroundColor: \"rgba(137,196,244,0.65)\",\r\n        }}\r\n      >\r\n        {card}\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SingleweatherWeek;\r\n","import React from \"react\";\r\nimport SingleweatherWeek from \"./singleWeatherWeek\";\r\nimport Grid from \"@mui/material/Typography\";\r\nimport Typography from \"@mui/material/Typography\";\r\nconst daysOfWeek = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nlet renderList = [];\r\n\r\nfunction WeatherWeek(props) {\r\n  const maxtempArray = props.weekData.max_temp;\r\n  const ArrayLength = maxtempArray.length;\r\n  const currentCity = props.cityName;\r\n  const days = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n  ];\r\n\r\n  function getDayOfWeek(dateString) {\r\n    var d = new Date(dateString);\r\n    var dayName = days[d.getDay()];\r\n    return dayName;\r\n  }\r\n\r\n  if (props.cityName !== props.weekData.name) {\r\n    renderList = [];\r\n    for (let i = 0; i < ArrayLength; i++) {\r\n      renderList.push(\r\n        <Grid item=\"true\" component={\"div\"} width=\"100%\">\r\n          <SingleweatherWeek\r\n            dayofWeek={getDayOfWeek(props.weekData.time[i])}\r\n            time={props.weekData.time[i]}\r\n            maxTemp={props.weekData.max_temp[i]}\r\n            minTemp={props.weekData.min_temp[i]}\r\n            weatherCode={props.weekData.weather_code[i]}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n\r\n  console.log(props.weekData[0]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\">Daily Weather</Typography>\r\n      <Grid\r\n        container=\"true\"\r\n        component={\"div\"}\r\n        display=\"inline-flex\"\r\n        width=\"85%\"\r\n        flex-wrap=\"wrap\"\r\n      >\r\n        {renderList}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherWeek;\r\n","import { Box, Card, Typography, Container } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { renderImg, imgSrc, imgAlt } from \"./renderImgLogic\";\r\n\r\nfunction MainWeatherComponent(props) {\r\n  renderImg(props.weekData.current_weathercode);\r\n  console.log(\"Main Weather Component\", imgSrc);\r\n  console.log(props.weekData.current_weathercode);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 2,\r\n        width: \"30vw\",\r\n        height: \"45vh\",\r\n        display: \"inline-block\",\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          objectFit: \"contain\",\r\n          height: \"45vh\",\r\n          width: \"100%\",\r\n          alignSelf: \"center\",\r\n          overflow: \"hidden\",\r\n          backgroundColor: \"transparent\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      >\r\n        <img src={imgSrc} alt={imgAlt} style={{ maxHeight: 225 }}></img>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          {props.weekData.current_weather}°C ||{\"\"}\r\n          {Math.round(\r\n            ((props.weekData.current_weather * 1.8 + 32) * 100) / 100\r\n          )}\r\n          °F\r\n        </Typography>\r\n        <Typography variant=\"p\">\r\n          Last Update:{props.weekData.last_updated}\r\n        </Typography>\r\n\r\n        <p>current wind direction:{props.weekData.current_winddirection}°</p>\r\n      </Card>\r\n\r\n      {/* last_updated: weekObject.data.current_weather.time, current_weathercode:\r\n      weekObject.data.current_weather.weathercode, current_winddirection:\r\n      weekObject.data.current_weather.winddirection, */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MainWeatherComponent;\r\n","import React from \"react\";\r\nimport WeatherWeek from \"./weatherWeek\";\r\nimport MainWeatherComponent from \"./mainWeather\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nfunction WeatherDisplay(props) {\r\n  // getWeatherData();\r\n\r\n  // let weatherWeekRender;\r\n  // let mainWeatherRender;\r\n  // if (weekWeather !== \"\") {\r\n  //   weatherWeekRender = <WeatherWeek weekData={weekWeather} />;\r\n  //   mainWeatherRender = <MainWeatherComponent weekData={weekWeather} />;\r\n  // }\r\n  let renderMainWeather;\r\n  let renderWeatherWeek;\r\n  if (props.cityData) {\r\n    renderMainWeather = <MainWeatherComponent weekData={props.cityData} />;\r\n  }\r\n  if (props.cityData) {\r\n    renderWeatherWeek = (\r\n      <WeatherWeek weekData={props.cityData} currentCity={props.cityName} />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        height: \"100vh\",\r\n        backgroundImage: `url(${props.cityImg})`,\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h3\">{props.cityName}</Typography>\r\n      <br></br>\r\n      {renderMainWeather}\r\n      {renderWeatherWeek}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherDisplay;\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst cities = [\r\n  \"Tokyo\",\r\n  \"Batavia\",\r\n  \"Los Angeles\",\r\n  \"Toronto\",\r\n  \"Istanbul\",\r\n  \"Paris\",\r\n  \"Houston\",\r\n  \"Busan\",\r\n  \"Hanoi\",\r\n];\r\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\r\n\r\nfunction ResponsiveAppBar() {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component={Link}\r\n            to={\"/\"}\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \"0\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            WeatherApp\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {cities.map((city) => (\r\n                <MenuItem\r\n                  key={city}\r\n                  component={Link}\r\n                  to={city}\r\n                  onClick={handleCloseNavMenu}\r\n                >\r\n                  <Typography textAlign=\"center\">{city}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"flex\", md: \"none\" },\r\n              flexGrow: 1,\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \"\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            WeatherApp\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {cities.map((city) => (\r\n              <Button\r\n                component={Link}\r\n                to={city}\r\n                key={city}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n              >\r\n                {city}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default ResponsiveAppBar;\r\n","import React from \"react\";\r\nimport { Container } from \"@mui/system\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Typography } from \"@mui/material\";\r\nimport mountainImg from \"./img/background-images/mountainImg.jpg\";\r\nfunction HomePage() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n        backgroundImage: `url(${mountainImg})`,\r\n        backgroundSize: \"cover\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box sx={{ height: 450, width: 450, alignSelf: \"center\" }}>\r\n        <Typography variant=\"h2\" color={\"whitesmoke\"}>\r\n          Weather App\r\n        </Typography>\r\n        <Typography variant=\"h5\" color={\"whitesmoke\"}>\r\n          View the weather of various cities around the world!\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport { Typography } from \"@mui/material\";\r\nimport fallingStars from \"./img/svg/falling-stars.svg\";\r\nimport beanie from \"./img/svg/beanie.svg\";\r\nimport dustWind from \"./img/svg/dust-wind.svg\";\r\nimport rainbowClear from \"./img/svg/rainbow-clear.svg\";\r\nimport umbrellaWind from \"./img/svg/umbrella-wind.svg\";\r\nimport haze from \"./img/svg/haze.svg\";\r\nimport overcast from \"./img/svg/overcast.svg\";\r\n\r\nfunction randomIcon() {\r\n  let randomIcons = [\r\n    fallingStars,\r\n    beanie,\r\n    dustWind,\r\n    rainbowClear,\r\n    umbrellaWind,\r\n    overcast,\r\n    haze,\r\n  ];\r\n\r\n  return randomIcons[Math.floor(Math.random() * randomIcons.length)];\r\n}\r\nfunction LoadingPage() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        height: \"90vh\",\r\n        backgroundColor: \"white\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box sx={{ width: \"25%\", alignSelf: \"center\" }}>\r\n        <img src={randomIcon()} alt=\"falling-star\"></img>\r\n        <LinearProgress />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoadingPage;\r\n","import TokyoBG from \"./img/background-images/TokyoBG.jpg\";\r\nimport JakartaBG from \"./img/background-images/JakartaBG.jpg\";\r\nimport LABG from \"./img/background-images/LABG.jpg\";\r\nimport TorontoBG from \"./img/background-images/TorontoBG.jpg\";\r\nimport IstanbulBG from \"./img/background-images/IstanbulBG.jpg\";\r\nimport ParisBG from \"./img/background-images/ParisBG.jpg\";\r\nimport HoustonBG from \"./img/background-images/HoustonBG.jpg\";\r\nimport BusanBG from \"./img/background-images/BusanBG.jpg\";\r\nimport HanoiBG from \"./img/background-images/HanoiBG.jpg\";\r\nexport const backgroundImages = [\r\n  TokyoBG,\r\n  JakartaBG,\r\n  LABG,\r\n  TorontoBG,\r\n  IstanbulBG,\r\n  ParisBG,\r\n  HoustonBG,\r\n  BusanBG,\r\n  HanoiBG,\r\n];\r\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport WeatherDisplay from \"./weatherRender\";\nimport ResponsiveAppBar from \"./navbar\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport HomePage from \"./homePage\";\nimport LoadingPage from \"./loadingPage\";\nimport { backgroundImages } from \"./bgImgImport\";\n\nconst cities = [\n  \"Tokyo\",\n  \"Jakarta\",\n  \"Los Angeles\",\n  \"Toronto\",\n  \"Istanbul\",\n  \"Paris\",\n  \"Houston\",\n  \"Busan\",\n  \"Hanoi\",\n];\n\nconst isoDate = new Date().toISOString().split(\"T\")[0];\nvar myDate = new Date();\nmyDate.setDate(myDate.getDate() + parseInt(7));\nvar newIsoDate = myDate.toISOString().split(\"T\")[0];\n\nfunction App() {\n  let fullweatherData = [];\n  let fullData = [];\n  const [geoCode, setgeoCode] = useState(\"\");\n  const [geoCodeLoaded, setgeoCodeLoaded] = useState(false);\n  const [weekWeather, setweekWeather] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getGeocode(city) {\n      setIsLoading(true);\n      const geocodeObject = await axios.get(\n        `https://geocoding-api.open-meteo.com/v1/search?name=${city}&count=1`\n      );\n      fullData.push({\n        name: geocodeObject.data.results[0].name,\n        lat: geocodeObject.data.results[0].latitude,\n        long: geocodeObject.data.results[0].longitude,\n      });\n      setgeoCode((geoCode) => ({\n        ...geoCode,\n        ...fullData,\n      }));\n    }\n    const getGeoCode = async () => {\n      for (let i = 0; i < cities.length; i++) {\n        await getGeocode(cities[i]);\n      }\n      setgeoCodeLoaded(true);\n    };\n    getGeoCode();\n  }, []);\n\n  useEffect(() => {\n    async function getWeeklyWeather(lat, long, cityName) {\n      const weekObject = await axios.get(\n        `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${long}&hourly=temperature_2m,apparent_temperature,weathercode&daily=weathercode,temperature_2m_max,temperature_2m_min&current_weather=true&timezone=auto&start_date=${isoDate}&end_date=${newIsoDate}`\n      );\n      fullweatherData.push({\n        name: cityName,\n        time: weekObject.data.daily.time,\n        max_temp: weekObject.data.daily.temperature_2m_max,\n        min_temp: weekObject.data.daily.temperature_2m_min,\n        weather_code: weekObject.data.daily.weathercode,\n        current_weather: weekObject.data.current_weather.temperature,\n        last_updated: weekObject.data.current_weather.time,\n        current_weathercode: weekObject.data.current_weather.weathercode,\n        current_winddirection: weekObject.data.current_weather.winddirection,\n        current_windspeed: weekObject.data.current_weather.windspeed,\n      });\n    }\n\n    const WeeklyWeatherLoop = async () => {\n      for (let i = 0; i < cities.length; i++) {\n        await getWeeklyWeather(\n          geoCode[i].lat,\n          geoCode[i].long,\n          geoCode[i].name\n        );\n      }\n      setweekWeather((weekWeather) => [...weekWeather, ...fullweatherData]);\n      setIsLoading(false);\n    };\n    if (geoCodeLoaded === true) {\n      WeeklyWeatherLoop();\n    }\n  }, [geoCode]);\n\n  let renderRoutes;\n  if (geoCode !== \"\" && weekWeather !== \"\") {\n    /*if geoCode and weekWeather are not empty*/\n    renderRoutes = [\n      /* renderRoutes are avaiable to prevent having no data*/\n      <Route path=\"/weather-app\" element={<HomePage />}></Route>,\n      <Route\n        path=\"/Tokyo\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[0]}\n            cityName={geoCode[0].name}\n            cityImg={backgroundImages[0]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Batavia\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[1]}\n            cityName={geoCode[1].name}\n            cityImg={backgroundImages[1]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Los Angeles\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[2]}\n            cityName={geoCode[2].name}\n            cityImg={backgroundImages[2]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Toronto\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[3]}\n            cityName={geoCode[3].name}\n            cityImg={backgroundImages[3]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Istanbul\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[4]}\n            cityName={geoCode[4].name}\n            cityImg={backgroundImages[4]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Paris\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[5]}\n            cityName={geoCode[5].name}\n            cityImg={backgroundImages[5]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Houston\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[6]}\n            cityName={geoCode[6].name}\n            cityImg={backgroundImages[6]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Busan\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[7]}\n            cityName={geoCode[7].name}\n            cityImg={backgroundImages[7]}\n          />\n        }\n      />,\n      <Route\n        path=\"/Hanoi\"\n        element={\n          <WeatherDisplay\n            cityData={weekWeather[8]}\n            cityName={geoCode[8].name}\n            cityImg={backgroundImages[8]}\n          />\n        }\n      />,\n    ];\n  }\n  let loadingScreen;\n  if (isLoading) {\n    loadingScreen = <LoadingPage></LoadingPage>;\n  }\n  return (\n    <>\n      <ResponsiveAppBar />\n      {loadingScreen}\n      <Routes>{renderRoutes}</Routes>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/clear-day.5e1a5f51.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast.0b1c0e7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.19d6d397.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.5ee0ecef.svg\";","module.exports = __webpack_public_path__ + \"static/media/extreme-day-sleet.dd2ca6b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/extreme-day-snow.f94640c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/extreme-hail.effb0663.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.8fb047f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.f244c6b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorms.d3ee53a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorms-extreme-snow.76934caf.svg\";"],"sourceRoot":""}